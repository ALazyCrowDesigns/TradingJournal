"""create core tables

Revision ID: f67064f3f30c
Revises:
Create Date: 2025-09-13 11:37:19.320146

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f67064f3f30c"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "symbols",
        sa.Column("symbol", sa.String(length=16), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("sector", sa.String(length=64), nullable=True),
        sa.Column("industry", sa.String(length=64), nullable=True),
        sa.Column("shares_float", sa.Float(), nullable=True),
        sa.Column("float_asof", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("symbol", name=op.f("pk_symbols")),
    )
    op.create_table(
        "daily_prices",
        sa.Column("symbol", sa.String(length=16), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("o", sa.Float(), nullable=False),
        sa.Column("h", sa.Float(), nullable=False),
        sa.Column("low", sa.Float(), nullable=False),
        sa.Column("c", sa.Float(), nullable=False),
        sa.Column("v", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["symbol"], ["symbols.symbol"], name=op.f("fk_daily_prices_symbol_symbols")
        ),
        sa.PrimaryKeyConstraint("symbol", "date", name=op.f("pk_daily_prices")),
    )
    op.create_index("ix_dp_symbol_date", "daily_prices", ["symbol", "date"], unique=False)
    op.create_table(
        "trades",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("profile_id", sa.Integer(), nullable=False),
        sa.Column("trade_date", sa.Date(), nullable=False),
        sa.Column("symbol", sa.String(length=16), nullable=False),
        sa.Column("side", sa.String(length=5), nullable=False),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column("entry", sa.Float(), nullable=True),
        sa.Column("exit", sa.Float(), nullable=True),
        sa.Column("pnl", sa.Float(), nullable=True),
        sa.Column("return_pct", sa.Float(), nullable=True),
        sa.Column("notes", sa.String(length=512), nullable=True),
        sa.Column("prev_close", sa.Float(), nullable=True),
        sa.Column("o", sa.Float(), nullable=True),
        sa.Column("h", sa.Float(), nullable=True),
        sa.Column("low", sa.Float(), nullable=True),
        sa.Column("c", sa.Float(), nullable=True),
        sa.Column("v", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["symbol"], ["symbols.symbol"], name=op.f("fk_trades_symbol_symbols")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_trades")),
        sa.UniqueConstraint("profile_id", "symbol", "trade_date", name="uq_trade_identity"),
    )
    op.create_index(
        "ix_trade_profile_symbol_date",
        "trades",
        ["profile_id", "symbol", "trade_date"],
        unique=False,
    )
    op.create_index(op.f("ix_trades_profile_id"), "trades", ["profile_id"], unique=False)
    op.create_index(op.f("ix_trades_symbol"), "trades", ["symbol"], unique=False)
    op.create_index(op.f("ix_trades_trade_date"), "trades", ["trade_date"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_trades_trade_date"), table_name="trades")
    op.drop_index(op.f("ix_trades_symbol"), table_name="trades")
    op.drop_index(op.f("ix_trades_profile_id"), table_name="trades")
    op.drop_index("ix_trade_profile_symbol_date", table_name="trades")
    op.drop_table("trades")
    op.drop_index("ix_dp_symbol_date", table_name="daily_prices")
    op.drop_table("daily_prices")
    op.drop_table("symbols")
    # ### end Alembic commands ###
